{"ast":null,"code":"import _defineProperty from \"/Users/flatiron/Documents/Projects/incipit-app/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/flatiron/Documents/Projects/incipit-app/client/src/components/Home.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport SinglePrompt from './SinglePrompt';\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      hello: \"Writer block? We hear ya! With INCIPIT you can generate a random prompt to inspire you or add your own prompt to help other writers out.\",\n      prompt: []\n    };\n\n    this.randomPrompt = e => {\n      e.preventDefault();\n      fetch('https://incipit-server.herokuapp.com/prompts').then(resp => resp.json()).then(data => this.setState({\n        prompt: data[Math.floor(Math.random() * data.length)],\n        hello: \"\"\n      }));\n    };\n\n    this.incrementLike = prompt => {\n      prompt.likes = prompt.likes + 1;\n      this.updatePrompt(_objectSpread({}, prompt));\n    };\n\n    this.updatePrompt = prompt => {\n      fetch(\"https://incipit-server.herokuapp.com/prompts/\".concat(prompt._id), {\n        method: 'PUT',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(prompt)\n      }).then(resp => resp.json()).then(data => this.setState({\n        prompt: prompt\n      }));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"home container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"btns\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      className: \"random btn\",\n      onClick: this.randomPrompt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"random prompt\"), React.createElement(Link, {\n      to: \"/new\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \" \", React.createElement(\"button\", {\n      className: \"btn newBtn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"add prompt\"), \" \")), React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"promptSpace\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, this.state.hello === \"\" ? React.createElement(SinglePrompt, {\n      prompt: this.state.prompt,\n      incrementLike: this.incrementLike,\n      updatePrompt: this.updatePrompt,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }) : this.state.hello)));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/flatiron/Documents/Projects/incipit-app/client/src/components/Home.js"],"names":["React","Link","SinglePrompt","Home","Component","state","hello","prompt","randomPrompt","e","preventDefault","fetch","then","resp","json","data","setState","Math","floor","random","length","incrementLike","likes","updatePrompt","_id","method","headers","body","JSON","stringify","render"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,IAAN,SAAmBH,KAAK,CAACI,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAClCC,KADkC,GAC1B;AACNC,MAAAA,KAAK,EAAE,0IADD;AAENC,MAAAA,MAAM,EAAE;AAFF,KAD0B;;AAAA,SAOnCC,YAPmC,GAOnBC,CAAD,IAAO;AAClBA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,KAAK,CAAC,8CAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AACxBT,QAAAA,MAAM,EAAEQ,IAAI,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,IAAI,CAACK,MAAhC,CAAD,CADY;AAExBd,QAAAA,KAAK,EAAE;AAFiB,OAAd,CAFd;AAOD,KAhBgC;;AAAA,SAkBjCe,aAlBiC,GAkBhBd,MAAD,IAAY;AAC1BA,MAAAA,MAAM,CAACe,KAAP,GAAef,MAAM,CAACe,KAAP,GAAa,CAA5B;AAEA,WAAKC,YAAL,mBAAsBhB,MAAtB;AACD,KAtBgC;;AAAA,SAwBjCgB,YAxBiC,GAwBjBhB,MAAD,IAAY;AACzBI,MAAAA,KAAK,wDAAiDJ,MAAM,CAACiB,GAAxD,GAA+D;AAClEC,QAAAA,MAAM,EAAE,KAD0D;AAElEC,QAAAA,OAAO,EAAE;AACX,oBAAU,kBADC;AAEX,0BAAgB;AAFL,SAFyD;AAMpEC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAgBtB,MAAhB;AAN8D,OAA/D,CAAL,CAQCK,IARD,CAQMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EARd,EASCF,IATD,CASMG,IAAI,IAAI,KAAKC,QAAL,CAAc;AAAET,QAAAA,MAAM,EAAEA;AAAV,OAAd,CATd;AAUD,KAnCgC;AAAA;;AAqCjCuB,EAAAA,MAAM,GAAE;AACN,WACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAA+B,MAAA,OAAO,EAAE,KAAKtB,YAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAiB;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAjB,MAFF,CADF,EAKI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWC,KAAX,KAAqB,EAArB,GAED,oBAAC,YAAD;AACE,MAAA,MAAM,EAAE,KAAKD,KAAL,CAAWE,MADrB;AAEE,MAAA,aAAa,EAAE,KAAKc,aAFtB;AAGE,MAAA,YAAY,EAAE,KAAKE,YAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFC,GAOH,KAAKlB,KAAL,CAAWC,KARX,CADF,CALJ,CADF;AAqBD;;AA3DgC;;AA8DnC,eAAeH,IAAf","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SinglePrompt from './SinglePrompt'\n\nclass Home extends React.Component {\n state = {\n   hello: \"Writer block? We hear ya! With INCIPIT you can generate a random prompt to inspire you or add your own prompt to help other writers out.\",\n   prompt: []\n }\n\n\nrandomPrompt = (e) => {\n    e.preventDefault();\n    fetch('https://incipit-server.herokuapp.com/prompts')\n    .then(resp => resp.json())\n    .then(data => this.setState({\n        prompt: data[Math.floor(Math.random() * data.length)],\n        hello: \"\"\n      })\n    )\n  }\n\n  incrementLike = (prompt) => {\n    prompt.likes = prompt.likes+1\n\n    this.updatePrompt({...prompt});\n  }\n\n  updatePrompt = (prompt) => {\n    fetch(`https://incipit-server.herokuapp.com/prompts/${prompt._id}`, {\n      method: 'PUT',\n      headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json'\n  },\n    body: JSON.stringify( prompt )\n  })\n    .then(resp => resp.json())\n    .then(data => this.setState({ prompt: prompt}))\n  }\n\n  render(){\n    return(\n      <div className=\"home container\">\n        <div className=\"btns\">\n          <button className=\"random btn\" onClick={this.randomPrompt}>random prompt</button>\n          <Link to=\"/new\"> <button className=\"btn newBtn\">add prompt</button> </Link>\n        </div>\n          <div className=\"main\">\n            <div className=\"promptSpace\">\n              {this.state.hello === \"\" ?\n\n              <SinglePrompt\n                prompt={this.state.prompt}\n                incrementLike={this.incrementLike}\n                updatePrompt={this.updatePrompt}\n              /> :\n            this.state.hello\n            }\n            </div>\n          </div>\n    </div>\n    )\n  }\n}\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}